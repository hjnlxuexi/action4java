/**
 * <p>Title : 探索Java对象拷贝与系列化的一些知识</p>
 * <p>Description :
 * 对象拷贝在内存中进行，比new对象效率高。
 *
 * 浅拷贝：Object.clone()
     1、 基本类型：如果变量是基本很类型，则拷贝其值，比如int、float等。
     2、 对象：如果变量是一个实例对象，则拷贝其地址引用，也就是说此时新对象与原来对象是公用该实例变量（关键问题）。
     3、 String字符串：若变量为String字符串，则拷贝其地址引用。但是在修改时，它会从字符串池中重新生成一个新的字符串，原有字符串对象保持不变。
 *
 * 深拷贝：
 *      自定义clone方法，并重新new成员对象（增加代码编写与维护难度）；
 *
 *
 * 序列化拷贝：
 *      在内存中通过字节流的拷贝是比较容易实现的。
 *      把母对象写入到一个字节流中，再从字节流中将其读出来，这样就可以创建一个新的对象了，
 *      并且该新对象与母对象之间并不存在引用共享的问题，真正实现对象的深拷贝。
 *
 * </p>
 * <p>Date : 2018/12/21 </p>
 *
 * @author : hejie
 */
package hj.action.basics.ObjectClone;