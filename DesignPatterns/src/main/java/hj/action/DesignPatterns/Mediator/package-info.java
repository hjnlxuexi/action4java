/**
 * <p>Title : 终结者模式</p>
 * <p>Description :
 *
 *  所谓中介者模式就是用一个中介对象来封装一系列的对象交互，中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。
 *  将系统由负责的网状结构转变成简单的星形结构，中介者对象在这里起到中转和协调作用。
 *
 *  Mediator: 抽象中介者。定义了同事对象到中介者对象之间的接口。
 *  ConcreteMediator: 具体中介者。
 *      实现抽象中介者的方法，它需要知道所有的具体同事类，同时需要从具体的同事类那里接收信息，并且向具体的同事类发送信息。
 *  Colleague: 抽象同事类。
 *  ConcreteColleague: 具体同事类。每个具体同事类都只需要知道自己的行为即可，但是他们都需要认识中介者。
 *
 *
 *  优点：
 *      1、 简化了对象之间的关系，将系统的各个对象之间的相互关系进行封装，将各个同事类解耦，使系统成为松耦合系统
 *      2、 减少了子类的生成。
 *      3、 可以减少各同事类的设计与实现。
 *  缺点：
 *      由于中介者对象封装了系统中对象之间的相互关系，导致其变得非常复杂，使得系统维护比较困难。
 *
 * </p>
 * <p>Date : 2019-02-20 </p>
 *
 * @author : hejie
 */
package hj.action.DesignPatterns.Mediator;