/**
 * <p>Title : 适配器模式</p>
 * <p>Description :
 *
 *  适配器模式：
 *      就是将一个类的接口，转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。
 *      在适配器模式中，我们可以定义一个包装类，包装不兼容接口的对象，这个包装类就是适配器，它所包装的对象就是适配者。
 *
 *  Target：目标接口
 *  Adapter：适配器类
 *  Adaptee：适配者类
 *  Client：客户类
 *
 *
 *  优点：
 *      1、将目标类和适配者类解耦，通过使用适配器让不兼容的接口变成了兼容，让客户从实现的接口解耦。
 *      2、增加了类的透明性和复用性，将具体的实现封装在适配者类中，对于客户端类来说是透明的，而且提高了适配者的复用性。
 *      3、灵活性和扩展性都非常好，在不修改原有代码的基础上增加新的适配器类，符合“开闭原则”。
 *
 *  适用场景：
 *      1、系统需要使用现有的类，而这些类的接口不符合系统的需要。
 *      2、想要建立一个可以重复使用的类，用于与一些彼此之间没有太大关联的一些类
 *
 *
 * </p>
 * <p>Date : 2019-02-14 </p>
 *
 * @author : hejie
 */
package hj.action.DesignPatterns.Adapter;