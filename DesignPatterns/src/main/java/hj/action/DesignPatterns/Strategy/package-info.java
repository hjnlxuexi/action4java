/**
 * <p>Title : 策略模式</p>
 * <p>Description :
 *
 *  策略模式：分离不同的算法实现，由客户端来决定使用哪一种策略
 *
 *  Context：调用者上下文环境，持有策略接口引用，用于执行算法
 *  Strategy：策略接口，定义策略统一的API
 *  ConcreteStrategy：具体的策略实现
 *
 *  优点：
 *      1、策略模式提供了对“开闭原则”的完美支持，用户可以在不修改原有系统的基础上选择算法或行为，也可以灵活地增加新的算法或行为。
 *      2、将面向实现 转换为 面向抽象 的模式
 *
 *  缺点：
 *      1、客户端必须知道所有的策略类，并自行决定使用哪一个策略类。
 *      2、策略模式将造成产生很多策略类
 *
 *
 * </p>
 * <p>Date : 2019-02-15 </p>
 *
 * @author : hejie
 */
package hj.action.DesignPatterns.Strategy;